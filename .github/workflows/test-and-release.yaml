name: Test and Release

on:
  push:
  workflow_dispatch:
    inputs:
      skipCleanup:
        description: "Skip cleanup"
        required: false
        default: "no"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  e2e-tests:
    name: End-to-end tests

    runs-on: ubuntu-latest

    timeout-minutes: 10

    environment:
      name: ci

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      AWS_DEFAULT_REGION: eu-west-1

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Cache AWS CLI (Linux)
        id: cache-aws-cli
        uses: actions/cache@v3
        with:
          path: aws/
          key: cache-aws-cli

      - name: Install AWS
        if: steps.cache-aws-cli-linux.outputs.cache-hit != 'true'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update

      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: build-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Generate Stack ID
        run: |
          RANDOM_STRING=`node -e "const crypto = require('crypto'); process.stdout.write(crypto.randomBytes(Math.ceil(8 * 0.5)).toString('hex').slice(0, 8));"`
          echo "STACK_NAME=memfault-aws-${RANDOM_STRING}" >> $GITHUB_ENV

      - run: aws sts get-caller-identity

      - run: echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV

      - name: Deploy stack
        env:
          IS_TEST: 1
        run: npx cdk deploy --require-approval never

      - name: Clean up End-to-End test resources
        if: always()
        run: npx cdk destroy -f '*'

  release:
    needs:
      - e2e-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/saga'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: build-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Semantic release
        run: npx semantic-release
